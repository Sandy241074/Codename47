#!/usr/bin/env python

import subprocess
import optparse
import re


def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to select device")
    parser.add_option("-m", "--mac", dest="new_mac", help="Interface to provide new Mac Address")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] Please enter the Interface, please use --help for more information")
    elif not options.new_mac:
        parser.error("[-] Please enter the new mac address, please use --help for more information")
    return options


def change_mac(interface, new_mac):
    print('[*]the new mac address of ' + interface + ' will be:' + new_mac)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])


def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(["ifconfig", interface])
    mac_address_change_result = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", ifconfig_result)
    if mac_address_change_result:
        return mac_address_change_result.group(0)
    else:
        print("[- could not find the mac address]")


options = get_arguments()
Current_MAC = get_current_mac(options.interface)  # before changing the mac address
print("The Current MAC Address is = " + str(Current_MAC))

change_mac(options.interface, options.new_mac)

Current_MAC = get_current_mac(options.interface)  # after the change function called
if Current_MAC == options.new_mac:
    print("[*] The MAC address was successfully changed to=" + options.new_mac)
else:
    print("[*] The MAC address was not changed to ")
